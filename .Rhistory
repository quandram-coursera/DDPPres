rm(list=ls())
thisURL <- "http://biostat.jhsph.edu/~jleek/contact.html"
con = url("http://biostat.jhsph.edu/~jleek/contact.html")
?readLines
htmlCode = readLines(con, 100)
close(con)
htmlCode
?nchar
nchar(htmlCode[10])
nchar(htmlCode[20])
nchar(htmlCode[30])
nchar(htmlCode[100])
read.fwf
thisFile <- read.fwf(file=url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"),widths=c(14,13,13,13,13))
head(thisFile)
thisFile <- read.fwf(file=url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"),skip=4,widths=c(14,13,13,13,13))
head(thisFile)
?read.fwf
thisFile <- read.fwf(file=url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"),skip=4,widths=c(9,4,3,4,3,4,3,4,3), sep="-")
thisFile <- read.fwf(file=url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"),skip=4,widths=c(9,4,3,4,3,4,3,4,3))
head(thisFile)
thisFile <- read.fwf(file=url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"),skip=4,widths=c(14,6,4,3,6,4,3,6,4,3,6,4,3))
head(thisFile)
sum(thisFile$V12)
thisFile <- read.fwf(file=url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"),skip=4,widths=c(9,3,3,3,3,3,3,3,3), sep=" ")
thisFile <- read.fwf(file=url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"),skip=4,widths=c(9,4,3,4,3,4,3,4,3), sep=" ")
thisFile <- read.fwf(file=url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"),skip=4,widths=c(14,6,4,3,6,4,3,6,4,3,6,4,3))
head(thisFile)
sum(thisFile$V5)
thisFile <- read.fwf(file=url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"),skip=4,widths=c(14,6,3,1,3,6,3,1,3,6,3,1,3,6,3,1,3))
head(thisFile)
thisFile <- read.fwf(file=url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"),skip=4,widths=c(9,6,3,1,3,6,3,1,3,6,3,1,3,6,3,1,3))
head(thisFile)
thisFile <- read.fwf(file=url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"),skip=4,widths=c(9,6,4,3,6,4,3,6,4,3,6,4,3))
head(thisFile)
thisFile <- read.fwf(file=url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"),skip=4,widths=c(9,4,3,4,3,4,3,4,3))
head(thisFile)
thisFile <- read.fwf(file=url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"),skip=4,widths=c(9,6,4,3,6,4,3,6,4,3,6,4,3))
head(thisFile)
thisFile <- read.fwf(file=url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"),skip=4,widths=c(9,4,3,4,3,4,3,4,3), sep=" ")
sum(thisFile$V6)
install.packages("UsingR")
library(UsingR)
library(manipulate)
library(ggplot2)
rm(list=ls())
?lm
x <- rnorm(10)
y <- rnorm(10)
odr <- order(x)
x
x[odr[10]]
y[odr[10]]
x <- c(0.18,-1.54,0.42,0.95)
w <- c(2,1,3,1)
mean(xw)^2
mean(x*w)^2
a <- x*w
mean a
mean(a)
mean(a)^2
mean(x)
mean(w)
a
mean(a)
mean(a^2)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
ggploy(x,y)
ggplot(x,y)
qplot(x,y)
z <- as.data.frame(x,y)
?ggplot
ggplot(aes(x=x, y=y))
lm(I(x-mean(x)~I(y-meane(y))-1))
lm(I(x-mean(x)~I(y-mean(y))-1))
lm(I(mtcars$mpg-mean(mtcars$mpg)~I(mtcars$weight-mean(mtcars$weight))-1))
mtcars
head(mtcars)
lm(I(mtcars$mpg-mean(mtcars$mpg)~I(mtcars$wt-mean(mtcars$wt))-1))
cor(4,3)
cor(x,y)
cor(5,2)
x <- c(5,5,5)
y <- x
cor(x,y)
x <- c(5,4,5)
y <- x
cor(x,y)
x <- c(2,2,2)
y <- c(1,1,1)
cor(x,y)
y <- c(1,0.5,1)
x <- c(2,2.5,2)
cor(x,y)
cor(y,x)
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
a <- x*w
sum(a)/sum(w)
1.5*0.4
version
packageStatus()
update.packages()
packageStatus()
mtcars
fit <- lm(mtcars$mpg, mtcars$wt)
fit <- lm(mtcars$mpg ~ mtcars$wt)
fit
fit <- lm(mtcars$mpg ~ mtcars$wt - mean(mtcars$wt))
fit <- lm(mtcars$mpg ~ I(mtcars$wt - mean(mtcars$wt))
)
fit <- lm(mtcars$mpg ~ I(mtcars$wt - mean(mtcars$wt)))
fit
?predict
predict(fit)
predict(fit, newdata=mean(mtcars$wt))
fit <- lm(mpg ~ wt, data=mtcars))
fit <- lm(mpg ~ wt, data=mtcars)
fit
fit <- lm(mpg ~ I(wt-mean(wt)), data=mtcars)
x <- data.frame(mean(mtcars$wt))
x
predict(fit, newdata=x)
confint
?confint
confint(fit)
rm(list=ls()
)
swirl
swirl()
library(swirl)
swirl()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package=lubridate)
today()
this_day <- today()
this_day
year(this_day)
wday(this_day)
wday(this_day, label=TRUE)
this_moment <- now()
this_moment
second(this_moment)
my_date <- ymd("1989-95-17")
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("1920\1\2")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
?update
this_moment <- update(this_moment, hours, minutes)
this_moment <- update(this_moment, hours = 10, minutes = 16)
this_moment
?now
nyc <- now(tzone="America/New_York")
nyx
nyc
depart <- nyc + days(2)
departy
depart
depart <- update(depart, hours=17, minutes = 34)
depart
arrive <- depart + hours(15) + minutes(50)
?with_tz
with_tz(arrive, "Asia/Hong_Kong")
arrive <- with_tz(arrive, "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008", tz="Singapore")
last_time
?new_interval
how_long <- new_interval(last_time, arrive)
as.period(how_long)
stopwatch()
swirl()
swirl()
ones <- rep(1, nrow(galton))
lm(child ~ ones + parent -1, galton)
lm(child ~ parent,
| galton)
lm(child ~ parent,galton)
lm(child ~ 1, galton)
head(trees)
fit <- lm(Volume ~ Girth + Height + Constant -1, trees)
trees2 <- eliminate("Girth",trees)
head(trees2)
fit2 <- lm(Volume ~ Height + Constant -1, trees2)
lapply(list(fit, fit2), coef)
swirl()
0
0
q
quit
quit()
library(swirl)
swirl()
all <- lm(Fertility ~ ., data=swiss)
summary(all)
summary(lm(Fertility ~ Agriculture, data=swiss))
cor(swiss$Examination, swiss$Education)
cor(swiss$Agriculture, swiss$Education)
makelms()
ec <- swiss$Examination + swiss$Catholic
efit <- lm(Fertility ~ . + ec, data=swiss)
all-efit
coef(all) - coef(efit)
all$coefficients-efit$coefficients
swirl
swirl()
6
dim(InsectSprays)
head(InsectSprays)
head(InsectSprays, 15)
sF
summary(InsectSpray[,2])
summary(InsectSprays[,2])
sapply(InsectSprays, 2, class)
sapply(InsectSprays, class)
fit <- lm(count ~ spray, data=InsectSprays)
summary(fit)$coef
est <- summary(fit)$coef[,1]
mean(sA)
mean(sB)
nift <- lm(count~spray - 1, data=InsectSprays)
nift <- lm(count ~ spray - 1, data=InsectSprays)
nfit <- lm(count ~ spray - 1, data=InsectSprays)
summary(nfit)$COEF
summary(nfit)$coef
spray2 <- relevel(InsectSprays$spray, "C)
")
spray2 <- relevel(InsectSprays$spray, "C")
fit2 <- lm(count ~ spray, data=spray2)
head(spray2)
fit2 <- lm(count ~ spray, data=InsectSprays)
fit2 <- lm(count ~ spray2, data=InsectSprays)
summary(fit2)$coef
mean(sC)
fit$coef[2] - fit$coef[3] / 1.6011
(fit$coef[2] - fit$coef[3]) / 1.6011
dim(hunger)
948
names(hunger)
fit <- lm(Numeric~Year, data=hunger)
fit$coef
summary(fit)$coef
lmF <- lm(Numeric~Year, data=hunger[hunger$Sec=="Female"])
lmF <- lm(Numeric~Year, data=hunger[hunger$Sec=="Female",])
lmF <- lm(Numeric[hunger$Sec=="Female",]~Year[hunger$Sec=="Female",], data=hunger)
lmF <- lm(Numeric[hunger$Sec=="Female"]~Year[hunger$Sec=="Female"], data=hunger)
lmF <- lm(Numeric~Year, data=hunger)
lmF <- lm(Numeric~Year, data=hunger[hunger$Sex=="Female"])
lmF <- lm(Numeric~Year, data=hunger[hunger$Sex=="Female",])
lmF <- lm(Numeric~Year[Sex=="Female"], data=hunger)
lmF <- lm(Numeric[Sex=="Female"]~Year[Sex=="Female"], data=hunger)
lmM <- lm(Numeric[Sex=="Male"]~Year[Sex=="Male"], data=hunger)
lmBoth <- lm(Numeric~Year+Sex, data=hunger)
summary(lmBoth)
lmInter <- lm(Numeric~Year+Sex+Sex*Year, data=hunger)
summary(lmInter)
fit <- lm(y~x, out2)
plot(fit, which=1)
fitno <- lm(y~x, out2[-1,])
plot(fitno, which=1)
coef(fit)-coef(fitno)
head(dfbeta(fit))
resno <- out2[1, "y"] - predict(fitno, out2[1,])
1-resid(fit)[1]/resno
head(hatvalues(fit)
)
sigma <- sqrt(fit$deviance/n(fit)-2)
sigma <- sqrt(fit$deviance/N(fit)-2)
sigma <- sqrt(fit$deviance/nrow(fit)-2)
sqrt(deviance(fit)/df.residual(fit))
sigma <- sqrt(deviance(fit)/df.residual(fit))
rstd <- resid(fit)/sigma*sqrt(1-hatvalues(fit))
rstd <- resid(fit)/(sigma*sqrt(1-hatvalues(fit)))
head(cbind(rstd, rstandard(fit)))
plot(fit, which=3)
plot(fit, which=2)
sigma1 <- sqrt(deviance(fitno)/df.residual(fitno))
resid(fit[1])/(sigma1*sqrt(1-hatvalues(fit)[1]))
resid(fit)[1]/(sigma1*sqrt(1-hatvalues(fit)[1]))
head(rstudent(fit))
dy <-- predict(fitno, out2)-predict(fit,out2)
dy <- predict(fitno, out2)-predict(fit,out2)
dy^2/2*sigma^2
sum(dy^2)/(2*sigma^2)
plot(fit, which=5)
galton
fit <- lm(child ~ parent, galton)
sum(fit$residuals^2)/926
sqrt(sum(fit$residuals^2)/926)
sqrt(sum(fit$residuals^2)/n-2)
sqrt(sum(fit$residuals^2)/(n-2)
)
summary(fit)$sigma
sqrt(deciance(fit)/(n-2))
sqrt(deviance(fit)/(n-2))
mu <- mean(galton$child)
sum((galton$child-mu)^2)
sTot <- sum((galton$child-mu)^2)
sRes <- deviance(sTot)
sRes <- deviance(sTot)
sRes <- deviance(galton$child)
sRes <- a
sRes <- deviance(fit)
1-(sRes/sTot)
1-sRes/sTot
summary(fit)$r.squared
cor(galton$child, galton$parent)
cor(galton$child, galton$parent)^2
rgp1()
rgp2(0)
rgp2()
head(swiss)
mdl <- lm(Fertility~., swiss)
vif(mdl)
mdl2 <- lm(Fertility~.[-Examination], swiss)
mdl2 <- lm(Fertility~-Examination, swiss)
mdl2 <- lm(Fertility~ . -Examination, swiss)
vif(mdl2)
x1c <- simbias()
apply(x1c, 1, mean)
swirl()
fit1 <- lm(Fertility~Agriculture, swiss)
fit3 <- lm(Fertility#Agriculture + Examination + Education, swiss)
)
fit3 <- lm(Fertility~Agriculture + Examination + Education, swiss)
anova(fit1,fit3)
deviance(fit3)
d <- deviance(fit3)/43
(deviance(fit1)-deviance(fit3))/2
n <- (deviance(fit1)-deviance(fit3))/2
n/d
pf(n/d, 2, 43, lower.tail=FALSE)
shapiro.test(fit3$residuals)
anova(fit1, fit3, fit5, fit6)
ravenData
mdl <- glm(ravenWinNum~ravenScore, family, ravenData)
mdl <- glm(ravenWinNum~ravenScore, binomial, ravenData)
lodds <- predict(mdl, data.frame(ravenScore=c(0, 3, 6)))
exp(lodds)/(1+exp(lodds))
summary(mdl)
confint(mdl)
exp(confint(mdl))
anova(mdl)
qchisq(0.95, 1)
var(rpois(1000, 50))
head(hits)
class(hits[,'date'])
as.integer(head(hits[,'date']))
mdl <- glm(visits ~ date, poisson, hits)
summary(mdl)
exp(confing(mdl, 'date'))
exp(confint(mdl, 'date'))
which.max(hits[,'visits'])
hits[704,]
lambda <- mdl$fitted.values[704]
qpois(.95, lambda)
mdl2 <- offset=log(visits+1)
mdl2 <- glm(visits ~ date, poisson, hits,offset=log(visits+1))
mdl2 <- glm(formula = simplystats ~ date, family = poisson, data = hits,offset = log(visits + 1))
qpois(.95, mdl2$fitted.values[704])
library(shiny)
install.packages("shiny")
if ("all" %in% tV){
library(shiny)
library(shiny)
library(DT)
shinyUI(pageWithSidebar(
headerPanel("Browsing the mtcars dataset"),
sidebarPanel(
selectInput("oVariable", "Please select the features that matter most to you in your new purchase", choices = c("all", colnames(mtcars)), multiple=TRUE)
),
mainPanel(
verbatimTextOutput("oText"),
verbatimTextOutput("oAvg"),
DT::dataTableOutput('oTable')
)
))
# pick variable then operator and value
# enable go button only at this point
# make table display only on go button
# output notes on the data
install.packages("DT")
library(DT)
library(DT)
str(mtcars)
mtcars$hp/mtcars$cyl
install.package("devtools")
install.packages("devtools")
library(devtools)
update.packages()
update.packages()
install_githum("slidify", "ramnathv")
install_github("slidify", "ramnathv")
install_github("slidifyLibraries", "ramnathv")
setwd("C:/_cloud-sync/Dropbox/coursera/datascience/9. DDP")
author("DDPPres")
library(shiny)
author("DDPPres")
library(slidify)
author("DDPPres")
* this is in no way guaranteed
\* this is in no way guaranteed
* this is in no way guaranteed
head(mtcars)
head(iris)
## Why work hard when you can work smart
head(mtcars)
author("DDPProj")
library(slidify)
mtcars[mtcars$mpg > mean(mtcars$mpg),]
mtcars
mtcars[mtcars$mpg > mean(mtcars$mpg),]
mean(mtcars$mpg)
temp <- which(mtcars$mpg > mean(mtcars$mpg) & mtcars$cyl > mean(mtcars$cyl))
temp <- which(mtcars$mpg > mean(mtcars$mpg))
temp <- which(mtcars$cyl > mean(mtcars$cyl))
temp <- which(mtcars$mpg > mean(mtcars$mpg))
temp <- which(mtcars$cyl > mean(mtcars$cyl))
temp <- which(mtcars$mpg > mean(mtcars$mpg) & mtcars$wt > mean(mtcars$wt))
mean(mtcars$cyl)
mean(mtcars$hp)
mean(mtcars$disp)
temp <- which(mtcars$cul > mean(mtcars$cyl) & mtcars$wt > mean(mtcars$wt))
temp <- which(mtcars$cyl > mean(mtcars$cyl) & mtcars$wt > mean(mtcars$wt))
mtcars[temp,]
temp <- which(mtcars$cul > mean(mtcars$cyl))
temp2 <- which(mtcars$wt > mean(mtcars$wt))
temp3 <- temp=temp2
temp3 <- temp==temp2
temp4 <- c("mtcars$cyl", "mtcars$wt")
temp4
temp4[1]
length(temp4)
which({
for (i in 1:length(temp4)){
paste(temp4[i], " > mean(", temp4[i], ")")
}
}
)
which(
for (i in 1:length(temp4)){
paste(temp4[i], " > mean(", temp4[i], ")")
}
)
a <- for (i in 1:length(temp4)){
paste(temp4[i], " > mean(", temp4[i], ")")
}
mean(temp4)
mean(mtcars[,temp4])
mean(mtcars[,temp4[1]])
temp4[1]
a <- for (i in 1:length(temp4)){
temp4[i]
}
a
length(tmep4)
length(temp4)
for(i in 1:length(temp4)){ i}
a
a()
mtcars[[temp4]]
mtcars[,temp4]
mtcars[,temp4[1]]
mtcars[,paste(temp4[1])]
temp4 <- c("cyl", "wt")
mtcars[,paste(temp4[1])]
mtcars[,temp4]
mtcars[,temp4>mean(temp4)]
mtcars[temp4>mean(temp4),]
mtcars[mean(temp4),]
mtcars[temp4[1]>mean(temp4[1]) & temp4[2]>mean(temp4[2]),]
mtcars[temp4]
a <- for (i in 1:length(temp4)){
temp4[i]
}
for (i in 1:length(temp4)){
temp4[i]
}
temp <- mtcars[mtcars$cyl > mean(mtcars$cyl)]
temp <- mtcars[mtcars$cyl > mean(mtcars$cyl),]
temp <- which(mtcars$cul > mean(mtcars$cyl))
temp2 <- which(mtcars$wt > mean(mtcars$wt))
temp <- which(mtcars$cyl > mean(mtcars$cyl))
reduce(intersect, list(temp,temp2))
Reduce(intersect, list(temp,temp2))
temp3 <- Reduce(intersect, list(temp,temp2))
a <- apply(temp4,mean)
a <- apply(temp4,1,mean)
dim(temp4)
length(temp4)
temp5 <- data.frame(temp4)
a <- apply(temp5,1,mean)
temp5[1]
temp5[2]
colnames(mtcars)
length(temp4)
for(i in 1:length(temp4)) temp4[i]
